package editor;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileFilter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTabbedPane;
import javax.swing.JTextPane;
import javax.swing.JToolBar;
import javax.swing.plaf.SliderUI;

public class Gift_Gui {

	static JFileChooser findFile = new JFileChooser();
	FileFilter type1;
	static File selctedFile, afile;
	static String content, filePath;
	private JToolBar toolBar;
	private Action newAction, exitAction,previewAction;
	static PrintWriter out;
	static JFrame f;

	public Gift_Gui() {
		initialize();
	}

	private void initialize() {
		toolBar = new JToolBar(null, JToolBar.VERTICAL);
		previewAction = new QuickLook();
		newAction = new NewAction();
		exitAction = new ExitAction();

		f = new JFrame("Gift Editor");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		JTabbedPane jtp = new JTabbedPane();
		jtp.addTab("Multiiple Choiese", new MultipleChoice());
		jtp.addTab("Short Answer", new Shortanswer());
		jtp.addTab("Matching", new Matching());
		jtp.addTab("True-False", new TrueFalseQ());
		jtp.addTab("Essay", new Essay());
		jtp.addTab("Numerical", new Numerical());

		toolBar.add(newAction);
		toolBar.add(previewAction);
		toolBar.addSeparator();
		toolBar.add(exitAction);
		

		f.add(jtp, BorderLayout.CENTER);
		f.add(toolBar, BorderLayout.WEST);
		f.pack();
		f.setSize(900, 500);
		f.setVisible(true);
	}

	class NewAction extends AbstractAction {

		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;

		public NewAction() {
			putValue(NAME, "New File");
			putValue(SMALL_ICON, new ImageIcon(("images/new.png")));
			putValue(SHORT_DESCRIPTION, "New File");
			putValue(MNEMONIC_KEY, new Integer('N'));

		}

		public void actionPerformed(ActionEvent e) {

			newSaveFile();
		}
	}

	class ExitAction extends AbstractAction {

		/**
	 * 
	 */
		private static final long serialVersionUID = 1L;

		public ExitAction() {
			putValue(NAME, "Exit");
			putValue(SMALL_ICON, new ImageIcon(("images/exit.png")));
			putValue(SHORT_DESCRIPTION, "Exit");
			putValue(MNEMONIC_KEY, new Integer('E'));
		}

		public void actionPerformed(ActionEvent e) {

			System.exit(0);
		}
	}
	
	class QuickLook extends AbstractAction{

		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;
		public QuickLook() {
			putValue(NAME, "PreView");
			putValue(SMALL_ICON, new ImageIcon(("images/Quick_look.png")));
			putValue(SHORT_DESCRIPTION, "Preview File");
			putValue(MNEMONIC_KEY, new Integer('Q'));
		}{
			
		}

		@Override
		public void actionPerformed(ActionEvent arg0) {
			JFrame q = new JFrame("Qucik Look");
			JTextPane ql = new JTextPane();
			BufferedReader br = null;
			try {
				br = new BufferedReader(new FileReader(selctedFile));
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			try {
		        
		        String line = br.readLine();

		        while (line != null) {
		            ql.setText(line.toString());
		            ql.setText("\n");
		            line = br.readLine();
		        }
		       
		    } catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} finally {
		        try {
					br.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		    }
			
			
			q.add(ql);
			q.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			q.pack();
			q.setSize(300, 150);
			q.setVisible(true);
			
			
		}
		
		
		
	}

	public static void newSaveFile() {

		if (selctedFile == null) {
			int saveResult = findFile.showSaveDialog(null);
			if (saveResult == JFileChooser.APPROVE_OPTION)
				selctedFile = findFile.getSelectedFile();
		}

		if (selctedFile != null) {

			filePath = selctedFile.getPath();

			if (!filePath.endsWith(".txt")) {
				selctedFile = new File(filePath + ".txt");
			}

		}
	}

}
